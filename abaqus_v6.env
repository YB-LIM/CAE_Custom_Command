# abaqus V6 Environment File
# This file is used to import other environment files located in the site
# directory. Custom parameters can be added here, but it is recommended to  
# use the custom_v6.env file instead. 

import os, driverUtils

#Fix bug IR-320707/IR-637600
if 'SLURM_PROCID' in os.environ:
   del os.environ['SLURM_PROCID'] 

# Utility function for loading site environment files
def importEnv(name, ldict=locals(), gdict=globals()):
    from driverUtils import locateSite, locateFile
    env = locateFile(locateSite(), '', name)
    if env:
        execfile(env, gdict, ldict)
    else:
        print("Cannot locate environment file: {}".format(name))

# Import parameters common to all platforms
importEnv('basic_v6.env') 

# Import MPI specific parameters
importEnv('mpi_config.env')

# Import platform specific parameters such as compiler and linker settings 
platform = driverUtils.getPlatform()
importEnv(driverUtils.getPlatform() + '.env')

# onCaeGraphicsStartup() function to configure graphics
# card specific settings for CAE & Viewer
importEnv('graphicsConfig.env')

# Import site specific parameters such as licensing and doc parameters
importEnv('custom_v6.env')

del importEnv, driverUtils, platform

compile_fortran += ['/names:lowercase',]

def onCaeStartup():
    import sys
    import os
    from abaqus import session

    # Specify the path to the directory containing custom script
    script_dir = r"D:\SIMULIA\EstProducts\2023\win_b64\SMA\site\Custom_Script"
    sys.path.append(script_dir)

    from delete_xy import delete_xy
    cliCommand("""from delete_xy import delete_xy""")
    from Cantilever import cantilever
    cliCommand("""from Cantilever import cantilever""")
    from Block import block
    cliCommand("""from Block import block""")
    from Beam import beam
    cliCommand("""from Beam import beam""")
    from Shell import shell
    cliCommand("""from Shell import shell""")
    from Single_UT import single_ut
    cliCommand("""from Single_UT import single_ut""")
    from Single_UC import single_uc
    cliCommand("""from Single_UC import single_uc""")
    from Single_CT import single_ct
    cliCommand("""from Single_CT import single_ct""")
    from Single_CC import single_cc
    cliCommand("""from Single_CC import single_cc""")     